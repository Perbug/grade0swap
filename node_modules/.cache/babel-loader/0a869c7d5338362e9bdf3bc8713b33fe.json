{"ast":null,"code":"import _objectSpread from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{Grid,makeStyles,Paper,Typography}from\"@material-ui/core\";import AccountBalanceIcon from\"@material-ui/icons/AccountBalance\";import{useSnackbar}from\"notistack\";import{getBalanceAndSymbol,getReserves}from\"../ethereumFunctions\";import{addLiquidity,quoteAddLiquidity}from\"./LiquidityFunctions\";import CoinField from\"../CoinSwapper/CoinField\";import CoinDialog from\"../CoinSwapper/CoinDialog\";import LoadingButton from\"../Components/LoadingButton\";import WrongNetwork from\"../Components/wrongNetwork\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{paperContainer:{borderRadius:theme.spacing(2),padding:theme.spacing(2),paddingBottom:theme.spacing(3),marginLeft:\"10%\",marginRight:\"10%\",width:\"90%\",overflow:\"wrap\",background:\"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",color:\"white\",position:\"relative !important\"},fullWidth:{width:\"100%\"},values:{width:\"100%\"},title:{textAlign:\"center\",padding:theme.spacing(0.5),marginBottom:theme.spacing(1)},hr:{width:\"100%\"},balance:{padding:theme.spacing(1),overflow:\"wrap\",textAlign:\"center\"},buttonIcon:{marginRight:theme.spacing(1),padding:theme.spacing(0.4)}};};var useStyles=makeStyles(styles);function LiquidityDeployer(props){var classes=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;// Stores a record of whether their respective dialog window is open\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),dialog1Open=_React$useState2[0],setDialog1Open=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),dialog2Open=_React$useState4[0],setDialog2Open=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),wrongNetworkOpen=_React$useState6[0],setwrongNetworkOpen=_React$useState6[1];// Stores data about their respective coin\nvar _React$useState7=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState8=_slicedToArray(_React$useState7,2),coin1=_React$useState8[0],setCoin1=_React$useState8[1];var _React$useState9=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState10=_slicedToArray(_React$useState9,2),coin2=_React$useState10[0],setCoin2=_React$useState10[1];// Stores the current reserves in the liquidity pool between coin1 and coin2\nvar _React$useState11=React.useState([\"0.0\",\"0.0\"]),_React$useState12=_slicedToArray(_React$useState11,2),reserves=_React$useState12[0],setReserves=_React$useState12[1];// Stores the current value of their respective text box\nvar _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),field1Value=_React$useState14[0],setField1Value=_React$useState14[1];var _React$useState15=React.useState(\"\"),_React$useState16=_slicedToArray(_React$useState15,2),field2Value=_React$useState16[0],setField2Value=_React$useState16[1];// Controls the loading button\nvar _React$useState17=React.useState(false),_React$useState18=_slicedToArray(_React$useState17,2),loading=_React$useState18[0],setLoading=_React$useState18[1];// Stores the user's balance of liquidity tokens for the current pair\nvar _React$useState19=React.useState(\"\"),_React$useState20=_slicedToArray(_React$useState19,2),liquidityTokens=_React$useState20[0],setLiquidityTokens=_React$useState20[1];// Used when getting a quote of liquidity\nvar _React$useState21=React.useState([0,0,0]),_React$useState22=_slicedToArray(_React$useState21,2),liquidityOut=_React$useState22[0],setLiquidityOut=_React$useState22[1];// Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n// token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\nvar switchFields=function switchFields(){var oldField1Value=field1Value;var oldField2Value=field2Value;setCoin1(coin2);setCoin2(coin1);setField1Value(oldField2Value);setField2Value(oldField1Value);setReserves(reserves.reverse());};// These functions take an HTML event, pull the data out and puts it into a state variable.\nvar handleChange={field1:function field1(e){setField1Value(e.target.value);},field2:function field2(e){setField2Value(e.target.value);}};// Turns the account's balance into something nice and readable\nvar formatBalance=function formatBalance(balance,symbol){if(balance&&symbol)return parseFloat(balance).toPrecision(8)+\" \"+symbol;else return\"0.0\";};// Turns the coin's reserves into something nice and readable\nvar formatReserve=function formatReserve(reserve,symbol){if(reserve&&symbol)return reserve+\" \"+symbol;else return\"0.0\";};// Determines whether the button should be enabled or not\nvar isButtonEnabled=function isButtonEnabled(){// If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\nvar parsedInput1=parseFloat(field1Value);var parsedInput2=parseFloat(field2Value);return coin1.address&&coin2.address&&parsedInput1!==NaN&&0<parsedInput1&&parsedInput2!==NaN&&0<parsedInput2&&parsedInput1<=coin1.balance&&parsedInput2<=coin2.balance;};var deploy=function deploy(){console.log(\"Attempting to deploy liquidity...\");setLoading(true);addLiquidity(coin1.address,coin2.address,field1Value,field2Value,'0','0',props.network.router,props.network.account,props.network.signer).then(function(){setLoading(false);// If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\nsetField1Value(\"\");setField2Value(\"\");enqueueSnackbar(\"Deployment Successful\",{variant:\"success\"});}).catch(function(e){setLoading(false);enqueueSnackbar(\"Deployment Failed (\"+e.message+\")\",{variant:\"error\",autoHideDuration:10000});});};// Called when the dialog window for coin1 exits\nvar onToken1Selected=function onToken1Selected(address){// Close the dialog window\nsetDialog1Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin2.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1({address:address,symbol:data.symbol,balance:data.balance});});}};// Called when the dialog window for coin2 exits\nvar onToken2Selected=function onToken2Selected(address){// Close the dialog window\nsetDialog2Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin1.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2({address:address,symbol:data.symbol,balance:data.balance});});}};// This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n// This means that when the user selects a different coin to convert between, or the coins are swapped,\n// the new reserves will be calculated.\nuseEffect(function(){console.log(\"Trying to get reserves between:\\n\"+coin1.address+\"\\n\"+coin2.address);if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}},[coin1.address,coin2.address,props.network.account,props.network.factory,props.network.signer]);// This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n// It will give a preview of the liquidity deployment.\nuseEffect(function(){if(isButtonEnabled()){console.log(\"Trying to preview the liquidity deployment\");quoteAddLiquidity(coin1.address,coin2.address,field1Value,field2Value,props.network.factory,props.network.signer).then(function(data){// console.log(data);\nconsole.log(\"TokenA in: \",data[0]);console.log(\"TokenB in: \",data[1]);console.log(\"Liquidity out: \",data[2]);setLiquidityOut([data[0],data[1],data[2]]);});}},[coin1.address,coin2.address,field1Value,field2Value,props.network.factory,props.network.signer]);// This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n// updated has changed. This allows them to see when a transaction completes by looking at the balance output.\nuseEffect(function(){var coinTimeout=setTimeout(function(){console.log(\"Checking balances & Getting reserves...\");if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}if(coin1.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin1.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1(_objectSpread(_objectSpread({},coin1),{},{balance:data.balance}));});}if(coin2.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin2.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2(_objectSpread(_objectSpread({},coin2),{},{balance:data.balance}));});}},10000);return function(){return clearTimeout(coinTimeout);};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:classes.title}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog1Open,onClose:onToken1Selected,coins:props.network.coins,signer:props.network.signer}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog2Open,onClose:onToken2Selected,coins:props.network.coins,signer:props.networksigner}),/*#__PURE__*/_jsx(WrongNetwork,{open:wrongNetworkOpen}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:true,value:field1Value,onClick:function onClick(){return setDialog1Open(true);},onChange:handleChange.field1,symbol:coin1.symbol!==undefined?coin1.symbol:\"Select\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:true,value:field2Value,onClick:function onClick(){return setDialog2Open(true);},onChange:handleChange.field2,symbol:coin2.symbol!==undefined?coin2.symbol:\"Select\"})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\",spacing:4,className:classes.balance,children:[/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,className:classes.values,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Typography,{className:\"text-white heading_balance\",variant:\"h6\",children:\"Your Balances\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:'$classes.balance text-white balance-text',children:formatBalance(coin1.balance,coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"{classes.balance} text-white balance-text\",children:formatBalance(coin2.balance,coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"text-white heading_balance\",children:\"Reserves\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:'$classes.balance text-white balance-text',children:formatReserve(reserves[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:'$classes.balance text-white balance-text',children:formatReserve(reserves[1],coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:\"text-white heading_balance\",children:\"Your Liquidity Pool Tokens\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:'$classes.balance text-white balance-text',children:formatReserve(liquidityTokens,\"UNI-V2\")})})})]}),/*#__PURE__*/_jsx(Paper,{className:classes.paperContainer,children:/*#__PURE__*/_jsxs(Grid,{container:true,item:true,direction:\"column\",alignItems:\"center\",spacing:2,className:classes.fullWidth,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Tokens in\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(liquidityOut[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(liquidityOut[1],coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Liquidity Pool Tokens Out\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(liquidityOut[2],\"UNI-V2\")})})})]})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr})]}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:/*#__PURE__*/_jsxs(LoadingButton,{loading:loading,valid:isButtonEnabled(),success:false,fail:false,onClick:deploy,children:[/*#__PURE__*/_jsx(AccountBalanceIcon,{className:classes.buttonIcon}),\"Deploy\"]})})]});}export default LiquidityDeployer;","map":{"version":3,"sources":["/Users/xcodedeveloper/Desktop/grade0swap/src/Liquidity/LiquidityDeployer.js"],"names":["React","useEffect","Grid","makeStyles","Paper","Typography","AccountBalanceIcon","useSnackbar","getBalanceAndSymbol","getReserves","addLiquidity","quoteAddLiquidity","CoinField","CoinDialog","LoadingButton","WrongNetwork","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","marginLeft","marginRight","width","overflow","background","color","position","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","useStyles","LiquidityDeployer","props","classes","enqueueSnackbar","useState","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","address","undefined","symbol","coin1","setCoin1","coin2","setCoin2","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","loading","setLoading","liquidityTokens","setLiquidityTokens","liquidityOut","setLiquidityOut","switchFields","oldField1Value","oldField2Value","reverse","handleChange","field1","e","target","value","field2","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput1","parsedInput2","NaN","deploy","console","log","network","router","account","signer","then","variant","catch","message","autoHideDuration","onToken1Selected","provider","weth","coins","data","onToken2Selected","factory","coinTimeout","setTimeout","clearTimeout","networksigner"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getBalanceAndSymbol,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\n\r\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\r\n\r\nimport CoinField from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(3),\r\n    marginLeft:\"10%\",\r\n    marginRight:\"10%\",\r\n    width: \"90%\",\r\n    overflow: \"wrap\",\r\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\r\n    color: \"white\",\r\n    position:\"relative !important\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.4),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityDeployer(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the user's balance of liquidity tokens for the current pair\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Used when getting a quote of liquidity\r\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    let oldField1Value = field1Value;\r\n    let oldField2Value = field2Value;\r\n\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(oldField2Value);\r\n    setField2Value(oldField1Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n    field2: (e) => {\r\n      setField2Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput1 !== NaN &&\r\n      0 < parsedInput1 &&\r\n      parsedInput2 !== NaN &&\r\n      0 < parsedInput2 &&\r\n      parsedInput1 <= coin1.balance &&\r\n      parsedInput2 <= coin2.balance\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const deploy = () => {\r\n    console.log(\"Attempting to deploy liquidity...\");\r\n    setLoading(true);\r\n\r\n    addLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      field2Value,\r\n      '0',\r\n      '0',\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        setField2Value(\"\");\r\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(\r\n        props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && props.network.account) {\r\n      getReserves(\r\n        coin1.address,\r\n        coin2.address,\r\n        props.network.factory,\r\n        props.network.signer,\r\n        props.network.account\r\n        ).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity deployment.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity deployment\");\r\n\r\n      quoteAddLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        field2Value,\r\n        props.network.factory,\r\n        props.network.signer\r\n      ).then((data) => {\r\n        // console.log(data);\r\n        console.log(\"TokenA in: \", data[0]);\r\n        console.log(\"TokenB in: \", data[1]);\r\n        console.log(\"Liquidity out: \", data[2]);\r\n        setLiquidityOut([data[0], data[1], data[2]]);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Liquidity deployer */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.networksigner}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field2Value}\r\n            onClick={() => setDialog2Open(true)}\r\n            onChange={handleChange.field2}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography className=\"text-white heading_balance\" variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={'$classes.balance text-white balance-text'}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className='{classes.balance} text-white balance-text'>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\" className=\"text-white heading_balance\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={'$classes.balance text-white balance-text'}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={'$classes.balance text-white balance-text'}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\" className=\"text-white heading_balance\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={'$classes.balance text-white balance-text'}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(liquidityOut[2], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={deploy}\r\n        >\r\n          <AccountBalanceIcon className={classes.buttonIcon} />\r\n          Deploy\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityDeployer;\r\n"]},"metadata":{},"sourceType":"module"}