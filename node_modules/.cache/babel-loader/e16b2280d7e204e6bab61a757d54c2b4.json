{"ast":null,"code":"import _slicedToArray from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Button,Dialog,Grid,IconButton,makeStyles,TextField,Typography,withStyles}from\"@material-ui/core\";import MuiDialogTitle from\"@material-ui/core/DialogTitle\";import MuiDialogActions from\"@material-ui/core/DialogActions\";import CloseIcon from\"@material-ui/icons/Close\";import CoinButton from\"./CoinButton\";import{doesTokenExist}from\"../ethereumFunctions\";import*as COLORS from\"@material-ui/core/colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{dialogContainer:{borderRadius:theme.spacing(2)},titleSection:{padding:theme.spacing(2)},titleText:{alignSelf:\"center\"},hr:{margin:0},address:{paddingLeft:theme.spacing(2.5),paddingRight:theme.spacing(2.5),paddingBottom:theme.spacing(2)},coinList:{height:\"300px\",overflowY:\"scroll\"},coinContainer:{paddingLeft:theme.spacing(0.5),paddingRight:theme.spacing(0.5),paddingTop:theme.spacing(2),marginTop:theme.spacing(2),overflow:\"hidden\"}};};var useStyles=makeStyles(styles);// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\nvar DialogTitle=withStyles(styles)(function(props){var children=props.children,classes=props.classes,onClose=props.onClose,other=_objectWithoutProperties(props,[\"children\",\"classes\",\"onClose\"]);return/*#__PURE__*/_jsx(MuiDialogTitle,_objectSpread(_objectSpread({disableTypography:true,className:classes.titleSection},other),{},{children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",alignContent:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:classes.titleText,children:children}),onClose?/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",onClick:onClose,children:/*#__PURE__*/_jsx(CloseIcon,{})}):null]})}));});// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\nvar DialogActions=withStyles(function(theme){return{root:{margin:0,padding:theme.spacing(1),backgroundColor:COLORS.grey[100]}};})(MuiDialogActions);export default function CoinDialog(props){// The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\n// from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\n// addresses will first be validated to make sure they exist.\n// When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\n// user closes the dialog without selecting anything), or will be a string containing the address of a coin.\nvar classes=useStyles();var onClose=props.onClose,open=props.open,coins=props.coins,signer=props.signer,others=_objectWithoutProperties(props,[\"onClose\",\"open\",\"coins\",\"signer\"]);var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),address=_React$useState2[0],setAddress=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];// Called when the user tries to input a custom address, this function will validate the address and will either\n// then close the dialog and return the validated address, or will display an error.\nvar submit=function submit(){if(doesTokenExist(address,signer)){exit(address);}else{setError(\"This address is not valid\");}};// Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\nvar exit=function exit(value){setError(\"\");setAddress(\"\");onClose(value);};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:function onClose(){return exit(undefined);},fullWidth:true,maxWidth:\"sm\",classes:{paper:classes.dialogContainer},children:[/*#__PURE__*/_jsx(DialogTitle,{onClose:function onClose(){return exit(undefined);},children:\"Select Coin\"}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(\"div\",{className:classes.coinContainer,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",spacing:1,alignContent:\"center\",children:[/*#__PURE__*/_jsx(TextField,{value:address,onChange:function onChange(e){return setAddress(e.target.value);},variant:\"outlined\",placeholder:\"Paste Address\",error:error!==\"\",helperText:error,fullWidth:true,className:classes.address}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Grid,{item:true,className:classes.coinList,children:/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",children:coins.map(function(coin,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(CoinButton,{coinName:coin.name,coinAbbr:coin.abbr,onClick:function onClick(){return exit(coin.address);}})},index);})})})]})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{autoFocus:true,onClick:submit,color:\"primary\",children:\"Enter\"})})]});}","map":{"version":3,"sources":["/Users/xcodedeveloper/Desktop/grade0swap/src/CoinSwapper/CoinDialog.js"],"names":["React","Button","Dialog","Grid","IconButton","makeStyles","TextField","Typography","withStyles","MuiDialogTitle","MuiDialogActions","CloseIcon","CoinButton","doesTokenExist","COLORS","styles","theme","dialogContainer","borderRadius","spacing","titleSection","padding","titleText","alignSelf","hr","margin","address","paddingLeft","paddingRight","paddingBottom","coinList","height","overflowY","coinContainer","paddingTop","marginTop","overflow","useStyles","DialogTitle","props","children","classes","onClose","other","DialogActions","root","backgroundColor","grey","CoinDialog","open","coins","signer","others","useState","setAddress","error","setError","submit","exit","value","undefined","paper","e","target","map","coin","index","name","abbr"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CoinButton from \"./CoinButton\";\r\nimport { doesTokenExist } from \"../ethereumFunctions\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as COLORS from \"@material-ui/core/colors\";\r\n\r\nconst styles = (theme) => ({\r\n  dialogContainer: {\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n  titleSection: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  titleText: {\r\n    alignSelf: \"center\",\r\n  },\r\n  hr: {\r\n    margin: 0,\r\n  },\r\n  address: {\r\n    paddingLeft: theme.spacing(2.5),\r\n    paddingRight: theme.spacing(2.5),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  coinList: {\r\n    height: \"300px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  coinContainer: {\r\n    paddingLeft: theme.spacing(0.5),\r\n    paddingRight: theme.spacing(0.5),\r\n    paddingTop: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle\r\n      disableTypography\r\n      className={classes.titleSection}\r\n      {...other}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Typography variant=\"h6\" className={classes.titleText}>\r\n          {children}\r\n        </Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </Grid>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: COLORS.grey[100],\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nCoinDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  coins: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function CoinDialog(props) {\r\n  // The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\r\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\r\n  // addresses will first be validated to make sure they exist.\r\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\r\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\r\n\r\n  const classes = useStyles();\r\n  const { onClose, open, coins, signer, ...others } = props;\r\n\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n\r\n  // Called when the user tries to input a custom address, this function will validate the address and will either\r\n  // then close the dialog and return the validated address, or will display an error.\r\n  const submit = () => {\r\n    if (doesTokenExist(address, signer)) {\r\n      exit(address);\r\n    } else {\r\n      setError(\"This address is not valid\");\r\n    }\r\n  };\r\n\r\n  // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\r\n  const exit = (value) => {\r\n    setError(\"\");\r\n    setAddress(\"\");\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => exit(undefined)}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      classes={{ paper: classes.dialogContainer }}\r\n    >\r\n      <DialogTitle onClose={() => exit(undefined)}>Select Coin</DialogTitle>\r\n\r\n      <hr className={classes.hr} />\r\n\r\n      <div className={classes.coinContainer}>\r\n        <Grid container direction=\"column\" spacing={1} alignContent=\"center\">\r\n          <TextField\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            variant=\"outlined\"\r\n            placeholder=\"Paste Address\"\r\n            error={error !== \"\"}\r\n            helperText={error}\r\n            fullWidth\r\n            className={classes.address}\r\n          />\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          <Grid item className={classes.coinList}>\r\n            <Grid container direction=\"column\">\r\n              {/* Maps all of the tokens in the constants file to buttons */}\r\n              {coins.map((coin, index) => (\r\n                <Grid item key={index} xs={12}>\r\n                  <CoinButton\r\n                    coinName={coin.name}\r\n                    coinAbbr={coin.abbr}\r\n                    onClick={() => exit(coin.address)}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <hr className={classes.hr} />\r\n\r\n      <DialogActions>\r\n        <Button autoFocus onClick={submit} color=\"primary\">\r\n          Enter\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}